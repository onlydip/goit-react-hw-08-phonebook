{"version":3,"file":"static/js/593.f36ca07b.chunk.js","mappings":"4LAEaA,E,QAAQC,GAAAA,EAAH,mH,yJCALC,EAAaD,EAAAA,GAAAA,KAAH,mH,6BCOVE,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,MAAO,GACPC,SAAU,IAEZC,SAAU,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACnBT,GAASU,EAAAA,EAAAA,IAAMF,IACfC,KAEFE,iBAAkBC,EAAAA,KAAaC,MAAM,CACnCR,MAAOO,EAAAA,KAAaE,SAAS,8BAC7BR,SAAUM,EAAAA,KAEPG,IAAI,GACJC,IAAI,IACJF,SAAS,kCAIhB,OACE,+BACE,UAAChB,EAAD,CAAYS,SAAUL,EAAOe,aAA7B,WACE,SAACrB,EAAA,EAAD,8BACA,SAACsB,EAAA,EAAD,CACGJ,UAAQ,EACTK,QAAQ,WACRC,GAAG,QACHC,KAAK,QACLC,MAAM,QACNC,GAAI,CAAEC,GAAI,OAAQC,MAAO,SACzBC,MAAOxB,EAAOM,OAAOH,MACrBsB,SAAUzB,EAAO0B,aACjBC,MAAO3B,EAAO4B,QAAQzB,MACtB0B,WAAY7B,EAAO4B,QAAQzB,OAASH,EAAO8B,OAAO3B,SAEpD,SAACa,EAAA,EAAD,CACGJ,UAAQ,EACTK,QAAQ,WACRC,GAAG,WACHC,KAAK,WACLC,MAAM,WACNW,KAAK,WACLV,GAAI,CAAEC,GAAI,OAAQC,MAAO,SACzBC,MAAOxB,EAAOM,OAAOF,SACrBqB,SAAUzB,EAAO0B,aACjBC,MAAO3B,EAAO4B,QAAQxB,SACtByB,WAAY7B,EAAO4B,QAAQxB,UAAYJ,EAAO8B,OAAO1B,YAEvD,SAAC4B,EAAA,EAAD,CAEEf,QAAQ,WACRgB,KAAK,QACLF,KAAK,SACLG,SAAW,SAACC,EAAA,EAAD,CAAa,aAAW,cAAcC,MAAM,YALzD,yB,SCzDKC,GAAkB1C,EAAAA,EAAAA,IAAO2C,EAAAA,EAAP3C,CAAH,kPCQ5B,MARA,WACE,OACE,SAAC0C,EAAD,CAAiBhB,GAAI,CAAEE,MAAO,KAA9B,UACE,SAAC1B,EAAD","sources":["components/ui/Title/Title.js","components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/LogInPage/LogInPage.styled.js","pages/LogInPage/LogInPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.p`\n  font-size: 26px;\n\n  margin-bottom: 30px;\n  font-weight: 600;\n  color: #812ADB;\n  \n`;\n","import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-top: 50px;\n`;\n","import * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from '../../redux/authentication/operations';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { useFormik } from 'formik';\nimport { StyledForm } from './LoginForm.styled';\nimport { Title } from '../ui/Title/Title';\nimport Fingerprint from '@mui/icons-material/Fingerprint';\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    onSubmit: (values, { resetForm }) => {\n      dispatch(logIn(values));\n      resetForm();\n    },\n    validationSchema: yup.object().shape({\n      email: yup.string().required('This field cannot be empty'),\n      password: yup\n        .string()\n        .min(6)\n        .max(28)\n        .required('This field cannot be empty'),\n    }),\n  });\n\n  return (\n    <>\n      <StyledForm onSubmit={formik.handleSubmit}>\n        <Title>Please, login:</Title>\n        <TextField\n           required\n          variant=\"outlined\"\n          id=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          sx={{ mb: '45px', width: '300px' }}\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <TextField\n           required\n          variant=\"outlined\"\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          sx={{ mb: '45px', width: '300px' }}\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n        <Button\n  \n          variant=\"outlined\"\n          size=\"large\"\n          type=\"submit\"\n          endIcon={  <Fingerprint aria-label=\"fingerprint\" color=\"success\"/>}\n        >\n          Login\n        </Button>\n      </StyledForm>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport Container from '@mui/material/Container';\n\nexport const StyledContainer = styled(Container)`\n  margin-top: 150px;\n  height: 400px;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: #ffffff;\n  border-radius: 10px; \n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); `\n\n","import { LoginForm } from '../../components/LoginForm/LoginForm';\nimport { StyledContainer } from './LogInPage.styled';\n\nfunction LogInPage() {\n  return (\n    <StyledContainer sx={{ width: 500 }}>\n      <LoginForm />\n    </StyledContainer>\n  );\n}\n\nexport default LogInPage;\n"],"names":["Title","styled","StyledForm","LoginForm","dispatch","useDispatch","formik","useFormik","initialValues","email","password","onSubmit","values","resetForm","logIn","validationSchema","yup","shape","required","min","max","handleSubmit","TextField","variant","id","name","label","sx","mb","width","value","onChange","handleChange","error","touched","helperText","errors","type","Button","size","endIcon","Fingerprint","color","StyledContainer","Container"],"sourceRoot":""}