{"version":3,"file":"static/js/606.d17aa68e.chunk.js","mappings":"4LAEaA,E,QAAQC,GAAAA,EAAH,mH,sGCCLC,GAAkBD,EAAAA,EAAAA,IAAOE,EAAAA,EAAPF,CAAH,kP,4DCDfG,EAAaH,EAAAA,GAAAA,KAAH,iG,6BCQVI,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,KAAM,GACNC,MAAO,GACPC,SAAU,IAEZC,SAAU,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACnBV,GAASW,EAAAA,EAAAA,IAASF,IAClBC,KAEFE,iBAAkBC,EAAAA,KAAaC,MAAM,CACnCT,KAAMQ,EAAAA,KAAaE,SAAS,8BAC5BT,MAAOO,EAAAA,KAAaG,IAAI,GAAGC,IAAI,IAAIF,SAAS,8BAC5CR,SAAUM,EAAAA,KAEPG,IAAI,GACJD,SAAS,yDAIhB,OACE,UAACjB,EAAD,CAAYU,SAAUN,EAAOgB,aAA7B,WACE,SAACxB,EAAA,EAAD,iCACA,SAACyB,EAAA,EAAD,CACEJ,UAAQ,EACRK,QAAQ,WACRC,GAAG,OACHhB,KAAK,OACLiB,MAAM,OACNC,GAAI,CAAEC,GAAI,OAAQC,MAAO,SACzBC,MAAOxB,EAAOO,OAAOJ,KACrBsB,SAAUzB,EAAO0B,aACjBC,MAAO3B,EAAO4B,QAAQzB,KACtB0B,WAAY7B,EAAO4B,QAAQzB,MAAQH,EAAO8B,OAAO3B,QAEnD,SAACc,EAAA,EAAD,CACEJ,UAAQ,EACRK,QAAQ,WACRC,GAAG,QACHhB,KAAK,QACLiB,MAAM,QACNW,KAAK,QACLV,GAAI,CAAEC,GAAI,OAAQC,MAAO,SACzBC,MAAOxB,EAAOO,OAAOH,MACrBqB,SAAUzB,EAAO0B,aACjBC,MAAO3B,EAAO4B,QAAQxB,MACtByB,WAAY7B,EAAO4B,QAAQxB,OAASJ,EAAO8B,OAAO1B,SAEpD,SAACa,EAAA,EAAD,CACEJ,UAAQ,EACRK,QAAQ,WACRC,GAAG,WACHhB,KAAK,WACLiB,MAAM,WACNW,KAAK,WACLV,GAAI,CAAEC,GAAI,OAAQC,MAAO,SACzBC,MAAOxB,EAAOO,OAAOF,SACrBoB,SAAUzB,EAAO0B,aACjBC,MAAO3B,EAAO4B,QAAQvB,SACtBwB,WAAY7B,EAAO4B,QAAQvB,UAAYL,EAAO8B,OAAOzB,YAEvD,SAAC2B,EAAA,EAAD,CAEEd,QAAQ,WACRe,KAAK,QACLF,KAAK,SACLG,SAAW,SAACC,EAAA,EAAD,CAAa,aAAW,cAAcC,MAAM,cALzD,0BC/DN,MARA,WACE,OACE,SAAC1C,EAAD,CAAiB2B,GAAI,CAAEE,MAAO,IAAKc,QAAS,QAA5C,UACE,SAACxC,EAAD","sources":["components/ui/Title/Title.js","pages/RegisterPage/RegisterPage.styled.js","components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.p`\n  font-size: 26px;\n\n  margin-bottom: 30px;\n  font-weight: 600;\n  color: #812ADB;\n  \n`;\n","import styled from 'styled-components';\nimport Container from '@mui/material/Container';\n\nexport const StyledContainer = styled(Container)`\n  margin-top: 150px;\n  height: 450px;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: #ffffff;\n  border-radius: 10px; \n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); `\n","import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  \n`;\n","import { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport * as yup from 'yup';\nimport { register } from '../../redux/authentication/operations';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { StyledForm } from './RegisterForm.styled';\nimport { Title } from '../ui/Title/Title';\n\nimport Fingerprint from '@mui/icons-material/Fingerprint';\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    onSubmit: (values, { resetForm }) => {\n      dispatch(register(values));\n      resetForm();\n    },\n    validationSchema: yup.object().shape({\n      name: yup.string().required('This field cannot be empty'),\n      email: yup.string().min(6).max(28).required('This field cannot be empty'),\n      password: yup\n        .string()\n        .min(6)\n        .required('Password should be of minimum 8 characters length'),\n    }),\n  });\n\n  return (\n    <StyledForm onSubmit={formik.handleSubmit}>\n      <Title>Please, register:</Title>\n      <TextField\n        required\n        variant=\"outlined\"\n        id=\"name\"\n        name=\"name\"\n        label=\"Name\"\n        sx={{ mb: '20px', width: '300px' }}\n        value={formik.values.name}\n        onChange={formik.handleChange}\n        error={formik.touched.name}\n        helperText={formik.touched.name && formik.errors.name}\n      />\n      <TextField\n        required\n        variant=\"outlined\"\n        id=\"email\"\n        name=\"email\"\n        label=\"Email\"\n        type=\"email\"\n        sx={{ mb: '20px', width: '300px' }}\n        value={formik.values.email}\n        onChange={formik.handleChange}\n        error={formik.touched.email}\n        helperText={formik.touched.email && formik.errors.email}\n      />\n      <TextField\n        required\n        variant=\"outlined\"\n        id=\"password\"\n        name=\"password\"\n        label=\"Password\"\n        type=\"password\"\n        sx={{ mb: '30px', width: '300px' }}\n        value={formik.values.password}\n        onChange={formik.handleChange}\n        error={formik.touched.password}\n        helperText={formik.touched.password && formik.errors.password}\n      />\n      <Button\n    \n        variant=\"outlined\"\n        size=\"large\"\n        type=\"submit\"\n        endIcon={  <Fingerprint aria-label=\"fingerprint\" color=\"secondary\"/>}\n      >\n        Register\n      </Button>\n    </StyledForm>\n  );\n};\n","import { StyledContainer } from './RegisterPage.styled';\nimport { RegisterForm } from '../../components/RegisterForm/RegisterForm';\n\nfunction RegisterPage() {\n  return (\n    <StyledContainer sx={{ width: 500, display: 'flex' }}>\n      <RegisterForm />\n    </StyledContainer>\n  );\n}\n\nexport default RegisterPage;\n"],"names":["Title","styled","StyledContainer","Container","StyledForm","RegisterForm","dispatch","useDispatch","formik","useFormik","initialValues","name","email","password","onSubmit","values","resetForm","register","validationSchema","yup","shape","required","min","max","handleSubmit","TextField","variant","id","label","sx","mb","width","value","onChange","handleChange","error","touched","helperText","errors","type","Button","size","endIcon","Fingerprint","color","display"],"sourceRoot":""}